{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/AboutComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","RenderLeader","key","id","Media","tag","left","middle","object","body","heading","About","leaders","map","Breadcrumb","BreadcrumbItem","to","active","CardHeader","title","delay","list","RenderMenuItem","onClick","width","CardImgOverlay","Menu","menu","dishes","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","console","log","JSON","stringify","alert","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","placeholder","validators","show","messages","maxength","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","CommentForm","state","isModalOpen","toggleModal","setState","postComment","dishId","rating","author","comment","Fragment","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","RenderDish","RenderComments","comments","commnt","Intl","DateTimeFormat","year","month","day","format","Date","date","DishDetail","dishItem","commentItem","class","Header","isNavOpen","toggleNav","handleLogin","event","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","Footer","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2bc632da.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n}","export const baseUrl = 'http://localhost:3001/';\r\n","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    if(isLoading) {\r\n        return(\r\n            <Loading />\r\n        );\r\n    }\r\n\r\n    else if (errMess) {\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else\r\n        return(\r\n            <FadeTransform in \r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>: null} \r\n                    <CardText>{item.description}</CardText>\r\n                </CardBody> \r\n            </Card> \r\n            </FadeTransform>/* line 10 is using ternary operator */\r\n        );\r\n}\r\n\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                        isLoading={props.dishesLoading} \r\n                        errMess={props.dishesErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                    isLoading={props.promosLoading} \r\n                    errMess={props.promosErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} \r\n                    isLoading={props.leadersLoading} \r\n                    errMess={props.leadersErrMess}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Stagger, Fade } from 'react-animation-components';\r\n\r\nfunction RenderLeader({leader}) {\r\n            return(\r\n                <div key={leader.id} className='col-12 mt-5'>\r\n                    <Media tag=\"li\">\r\n                        <Media left middle>\r\n                            <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                        </Media>\r\n                    <Media body className=\"ml-5\">\r\n                            <Media heading>{leader.name}</Media>\r\n                            <p>{leader.designation}</p>\r\n                            <p>{leader.description}</p>\r\n                        </Media>\r\n                    </Media>\r\n                    </div>\r\n            );     \r\n    }\r\n\r\nfunction About(props) {\r\n    const leaders = props.leaders.leaders.map((leader) => {\r\n    if (props.leaders.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.leaders.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.leaders.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n        } else {\r\n        return (\r\n            <Fade in>\r\n                <div key={leader.id}>\r\n                        <RenderLeader leader={leader} \r\n                        isLoading={props.leadersLoading} \r\n                        errMess={props.leadersErrMess}/>               \r\n                </div>\r\n            </Fade>\r\n        );\r\n    }\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Stagger delay={500} in>\r\n                        <Media list>\r\n                            {leaders}\r\n                        </Media>\r\n                    </Stagger>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n    function RenderMenuItem({ dish, onClick }) { /* One way to implement functional component */\r\n        return(\r\n            <Card>\r\n                <Link to={`/menu/${dish.id}`} >   \r\n                    <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardImgOverlay>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                    </CardImgOverlay>\r\n                </Link>\r\n            </Card> /* in link tag we use back quotes to specify the structure of link */\r\n        );\r\n    }\r\n\r\n    const Menu = (props) => {   /* Another way to implement functional component */\r\n        \r\n        const menu = props.dishes.dishes.map((dish) => {\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish} />\r\n                </div>\r\n            );\r\n        });\r\n        \r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n            return ( \r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to= '/home'>Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>                        \r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {menu}\r\n                    </div>\r\n                </div>\r\n            );\r\n    }\r\n        \r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component { /* only class component can manage controlled froms, not functional components!! So change to class component */\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this); /* binding it to the state */\r\n        \r\n    }\r\n\r\n    handleSubmit(values) {\r\n        console.log(\"Current State is: \" + JSON.stringify(values));\r\n        alert(\"Current State is: \" + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to= '/home'>Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>                        \r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your feedback</h3>\r\n                    </div> \r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         /> \r\n                                    <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n   \r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardBody, CardText, CardTitle, Breadcrumb, BreadcrumbItem,\r\n    Button, Modal, ModalHeader, ModalBody, Label, Row, Col } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\n\r\nexport class CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n      }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                                <Label htmlFor=\"rating\">Rating</Label>\r\n                                <Control.select model=\".rating\" name=\"rating\"\r\n                                    className=\"form-control\">\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                                <Label htmlFor=\"author\">Your Name</Label>\r\n                                <Control.text\r\n                                    model=\".author\"\r\n                                    name=\"author\"\r\n                                    placeholder=\"Your Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                    required,\r\n                                    minLength: minLength(3),\r\n                                    maxLength: maxLength(15),\r\n                                    }}\r\n                                />\r\n                                <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".author\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                    required: \"Required\",\r\n                                    minLength: \"Must be greater than 2 characters\",\r\n                                    maxLength: \"Must be lesser than 16 characters\",\r\n                                    }}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                                <Label htmlFor=\"name\">Comment</Label>\r\n                                <Control.textarea\r\n                                    model=\".comment\"\r\n                                    name=\"comment\"\r\n                                    rows=\"5\"\r\n                                    className=\"form-control\"\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n    function RenderDish({dish}) {\r\n        if (dish != null) {\r\n            return (\r\n                <div className='col-12 col-md-5 m-1'>\r\n                    <FadeTransform in \r\n                        transformProps={{\r\n                            exitTransform: 'scale(0.5) translateY(-50%)'\r\n                        }}>\r\n                        <Card>\r\n                            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                            <CardBody>\r\n                                <CardTitle>{dish.name}</CardTitle>\r\n                                <CardText>{dish.description}</CardText>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </FadeTransform>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (<div></div>)\r\n        }\r\n    }\r\n\r\n\r\n    function RenderComments({comments, postComment, dishId}) {\r\n        if (comments == null) {\r\n            return (<div></div>)\r\n        }\r\n        const commnt = comments.map(comment => {\r\n            return (\r\n                <Fade in>\r\n                    <li key={comment.id}>\r\n                        <p>{comment.comment}</p>\r\n                        <p>-- {comment.author},\r\n                        &nbsp;\r\n                        {new Intl.DateTimeFormat('en-US', {\r\n                                year: 'numeric',\r\n                                month: 'long',\r\n                                day: '2-digit'\r\n                            }).format(new Date(comment.date))}\r\n                        </p>\r\n                    </li>\r\n                </Fade>\r\n            )\r\n        })\r\n        return (\r\n            <div className='col-12 col-md-5 m-1'>\r\n                <h4> Comments </h4>\r\n                <ul className='list-unstyled'>\r\n                    <Stagger in>\r\n                        {commnt}\r\n                    </Stagger>\r\n                </ul>\r\n                <CommentForm dishId={dishId} postComment={postComment} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n  \r\n\r\n    const DishDetail = (props) => {\r\n        \r\n        if(props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        \r\n        else if (props.dish == null) {\r\n            return (<div></div>)\r\n        }\r\n        const dishItem = <RenderDish dish={props.dish} />\r\n        const commentItem = <RenderComments comments={props.comments} \r\n            postComment= {props.postComment} \r\n            dishId={props.dish.id} />\r\n        \r\n         \r\n        return (\r\n            <div class=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to= '/menu'>Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>                        \r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    {dishItem}\r\n                    {commentItem}\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    export default DishDetail;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, \r\n    Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \"Password: \" + this.password.value + \"Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\">\r\n                <div className=\"container\">\r\n                    <NavbarToggler onClick={this.toggleNav} />\r\n                    <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                    <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\"\r\n                    alt=\"Ristorante Con Fusion\" />\r\n                </NavbarBrand>\r\n                <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                    <Nav navbar>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/home\">\r\n                                <span className=\"fa fa-home fa-lg\"></span> Home\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <Button outline onClick={this.toggleModal}>\r\n                                <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                            </Button>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n                </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                <Input type=\"checkbox\" name=\"remember\" \r\n                                    innerRef={(input) => this.remember = input}/>\r\n                                Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About Us</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n    \r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n \r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error '+ response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => {console.log('Post comments', error.message)\r\n        alert('Your comment could not be posted\\nError: '+error.message)})\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message:message\r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n            error => {\r\n                throw error;\r\n            })\r\n        .then(response => response.json())\r\n        .then(response => dispatch(addFeedback(response)))\r\n        .catch(error => { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: ' + error.message); });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const fetchDishes = () => (dispatch) => { /* The fetchDishes as you see is a punk which returns a function which when called will try to fetch the dishes first by setting the isLoading to \"True\", and so that the spinner can be displayed and after a period of time the dishes are fetched and then added into the application. So, that is what this fetchDishes is going to show for us. */\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error '+ response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => { /* The fetchDishes as you see is a punk which returns a function which when called will try to fetch the dishes first by setting the isLoading to \"True\", and so that the spinner can be displayed and after a period of time the dishes are fetched and then added into the application. So, that is what this fetchDishes is going to show for us. */\r\n\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                var error = new Error('Error '+ response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => { /* The fetchDishes as you see is a punk which returns a function which when called will try to fetch the dishes first by setting the isLoading to \"True\", and so that the spinner can be displayed and after a period of time the dishes are fetched and then added into the application. So, that is what this fetchDishes is going to show for us. */\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error '+ response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => { /* The fetchDishes as you see is a punk which returns a function which when called will try to fetch the dishes first by setting the isLoading to \"True\", and so that the spinner can be displayed and after a period of time the dishes are fetched and then added into the application. So, that is what this fetchDishes is going to show for us. */\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            var error = new Error('Error '+ response.status + ': ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n    })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\n","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS= 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED= 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';","import React, { Component } from 'react';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchDishes: () => {dispatch(fetchDishes())},\r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchComments: () => {dispatch(fetchComments())},\r\n  fetchPromos: () => {dispatch(fetchPromos())},\r\n  fetchLeaders: () => {dispatch(fetchLeaders())},\r\n  postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) => dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message))\r\n});\r\n\r\n\r\nclass Main extends Component {\r\n\r\n  \r\n\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n render() {\r\n\r\n    const HomePage = () => {\r\n      return(\r\n        <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n        dishesLoading={this.props.dishes.isLoading}\r\n        dishesErrMess={this.props.dishes.errMess}\r\n        promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n        promosLoading={this.props.promotions.isLoading}\r\n        promosErrMess={this.props.promotions.errMess}\r\n        leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]} \r\n        leadersLoading={this.props.leaders.isLoading}\r\n        leadersErrMess={this.props.leaders.errMess}/>     /* all those dishes,promotions and leaders for which featured=true (see in dishes.js,promotions.js and leaders.js) we pass as props to homecomponent to be displayed as featured products. */\r\n\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]} \r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Route exact path='/contactus' component={() => <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} />} />\r\n              <Route exact path=\"/aboutus\" component={() => <About leaders={this.props.leaders} />} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        dishes: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload}\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, dishes: []}\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload}\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, comments: []}\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state, comments: state.comments.concat(comment)};\r\n                   \r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    promotions: []\r\n}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload}\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, promotions: []}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}, action) => {\r\n    switch(action.type) {\r\n\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload}\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload, leaders: []}\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel,',\r\n    message: ''\r\n}","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n        <div>\n          <Main />\n        </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n  \n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}